"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const react_native_1 = require("react-native");
const react_native_chart_kit_1 = require("react-native-chart-kit");
const helpers_1 = require("../../helpers");
const styles_1 = require("./styles");
/* eslint-enable no-unused-vars */
const statColours = {
    hp: (opacity = 1) => `rgba(99, 187, 91, ${opacity})`,
    attack: (opacity = 1) => `rgba(206, 64, 105, ${opacity})`,
    defense: (opacity = 1) => `rgba(243, 210, 59, ${opacity})`,
    'sp. atk': (opacity = 1) => `rgba(171, 106, 200, ${opacity})`,
    'sp. def': (opacity = 1) => `rgba(236, 143, 230, ${opacity})`,
    speed: (opacity = 1) => `rgba(116, 206, 192, ${opacity})`
};
function renderTypes(pokemon) {
    return pokemon.types.map(type => {
        const { PRIMARY, SECONDARY } = helpers_1.getPokemonTypeByName(type);
        return (<react_native_1.Text key={`${pokemon.name}_${type}`} style={[styles_1.styles.typeText, { color: SECONDARY, backgroundColor: PRIMARY }]}>
        {type}
      </react_native_1.Text>);
    });
}
function renderStats(pokemon) {
    const stats = Object.keys(pokemon.baseStats);
    return (<react_native_1.View style={styles_1.styles.infoContainer}>
      <react_native_1.Text style={styles_1.styles.infoTitle}>Stats</react_native_1.Text>
      <react_native_1.View style={styles_1.styles.chartsContainer}>
        {stats.map(stat => {
        const value = pokemon.baseStats[stat];
        return (<react_native_1.View key={`chart_${stat}`}>
                <react_native_chart_kit_1.ProgressChart key={stat} data={{
            labels: [stat],
            data: [value / 255]
        }} width={100} height={100} hideLegend chartConfig={{
            color: (opacity = 1) => statColours[stat](opacity),
            labelColor: (opacity = 1) => statColours[stat](opacity),
            backgroundColor: 'white',
            backgroundGradientFrom: 'white',
            backgroundGradientTo: 'white',
            strokeWidth: 0.3
        }} style={{
            marginLeft: 20
        }}/>
                <react_native_1.Text style={[styles_1.styles.infoText, { textAlign: 'center' }]}>{stat} ({value})</react_native_1.Text>
              </react_native_1.View>);
    })}
      </react_native_1.View>
    </react_native_1.View>);
}
function renderAbilities(pokemon) {
    const { abilities, types } = pokemon;
    const normalAbilities = abilities.filter(ability => !ability.isHidden);
    const hiddenAbilities = abilities.filter(ability => ability.isHidden);
    const colour = helpers_1.getPokemonTypeByName(types[0]).PRIMARY;
    const normalAbilityComponents = normalAbilities.map(ability => {
        const { name, description } = ability;
        return [
            <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]} key={name}>
        {name}
      </react_native_1.Text>,
            <react_native_1.Text style={[styles_1.styles.infoDescription]} key={`${name}_desc`}>
        {description}
      </react_native_1.Text>
        ];
    });
    const hiddenAbilityComponents = hiddenAbilities.map(ability => {
        const { name, description } = ability;
        return [
            <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]} key={name}>
        {name} - Hidden Ability
      </react_native_1.Text>,
            <react_native_1.Text style={[styles_1.styles.infoDescription]} key={`${name}_desc`}>
        {description}
      </react_native_1.Text>
        ];
    });
    return (<react_native_1.View style={styles_1.styles.infoContainer}>
      <react_native_1.Text style={styles_1.styles.infoTitle}>Abilities</react_native_1.Text>
      <react_native_1.View>
        {normalAbilityComponents}
        {hiddenAbilityComponents}
      </react_native_1.View>
    </react_native_1.View>);
}
function renderBasicInfo(pokemon) {
    const colour = helpers_1.getPokemonTypeByName(pokemon.types[0]).PRIMARY;
    return (<react_native_1.View style={styles_1.styles.infoContainer}>
      <react_native_1.Text style={styles_1.styles.infoTitle}>About {pokemon.name}</react_native_1.Text>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Galar Dex
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          #{pokemon.localNumber}
        </react_native_1.Text>
      </react_native_1.View>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          National Dex
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          #{pokemon.number}
        </react_native_1.Text>
      </react_native_1.View>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Species
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          {pokemon.species}
        </react_native_1.Text>
      </react_native_1.View>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Height
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          {pokemon.height}
        </react_native_1.Text>
      </react_native_1.View>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Weight
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          {pokemon.weight}
        </react_native_1.Text>
      </react_native_1.View>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Growth Rate
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          {pokemon.growthRate}
        </react_native_1.Text>
      </react_native_1.View>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Egg Cycles
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          {pokemon.eggCycles}
        </react_native_1.Text>
      </react_native_1.View>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Egg Groups
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          {pokemon.eggGroups.join(', ')}
        </react_native_1.Text>
      </react_native_1.View>
    </react_native_1.View>);
}
function renderPokedexEntries(pokemon) {
    const colour = helpers_1.getPokemonTypeByName(pokemon.types[0]).PRIMARY;
    return (<react_native_1.View style={styles_1.styles.infoContainer}>
      <react_native_1.Text style={styles_1.styles.infoTitle}>#{pokemon.localNumber}</react_native_1.Text>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Sword
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          {pokemon.pokedexEntries.sword}
        </react_native_1.Text>
      </react_native_1.View>
      <react_native_1.View>
        <react_native_1.Text style={[styles_1.styles.infoText, { color: colour }]}>
          Shield
        </react_native_1.Text>
        <react_native_1.Text style={[styles_1.styles.infoDescription]}>
          {pokemon.pokedexEntries.shield}
        </react_native_1.Text>
      </react_native_1.View>
    </react_native_1.View>);
}
function DetailsScreen(props) {
    const { route } = props;
    const { pokemon } = route.params;
    const { width } = react_native_1.Dimensions.get('window');
    const uri = pokemon.sprites.artwork;
    return (<react_native_1.ScrollView testID={`${pokemon.name.toLowerCase()}-details`} style={styles_1.styles.container}>
      <react_native_1.View style={styles_1.styles.imageContainer}>
        <react_native_1.Image resizeMethod='scale' resizeMode='contain' style={[styles_1.styles.mainImage, { width, height: 250 }]} source={{ uri }}/>
      </react_native_1.View>
      {renderTypes(pokemon)}
      {renderPokedexEntries(pokemon)}
      {renderStats(pokemon)}
      {renderAbilities(pokemon)}
      {renderBasicInfo(pokemon)}
    </react_native_1.ScrollView>);
}
exports.default = DetailsScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,