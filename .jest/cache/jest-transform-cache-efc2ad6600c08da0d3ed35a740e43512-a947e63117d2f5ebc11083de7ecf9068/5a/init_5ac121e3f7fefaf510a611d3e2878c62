6beb8ea656258b9ed12fb02cedd8710a
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _detox = require("detox");

var adapter = _interopRequireWildcard(require("detox/runners/jest/adapter"));

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var config = require("../package.json").detox;

jest.setTimeout(120000);
jasmine.getEnv().addReporter(adapter);
beforeAll(function () {
  return __awaiter(void 0, void 0, void 0, _regenerator.default.mark(function _callee() {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _detox.init)(config, {
              reuse: true
            });

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
});
beforeEach(function () {
  return __awaiter(void 0, void 0, void 0, _regenerator.default.mark(function _callee2() {
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return adapter.beforeEach();

          case 2:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
});
afterAll(function () {
  return __awaiter(void 0, void 0, void 0, _regenerator.default.mark(function _callee3() {
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return adapter.afterAll();

          case 2:
            _context3.next = 4;
            return (0, _detox.cleanup)();

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYW11ZWxiYXJrZXIvY29kZS9wZXJzb25hbC9yZWFjdC1uYXRpdmUtcGxheWdyb3VuZC9wbGF5Z3JvdW5kL2UyZS9pbml0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTSxNQUFNLEdBQUcsT0FBTyxtQkFBUCxDQUEyQixLQUExQzs7QUFFQSxJQUFJLENBQUMsVUFBTCxDQUFnQixNQUFoQjtBQUNBLE9BQU8sQ0FBQyxNQUFSLEdBQWlCLFdBQWpCLENBQTZCLE9BQTdCO0FBRUEsU0FBUyxDQUFDO0FBQUEsU0FBVyxTQUFBLENBQUEsS0FBQSxDQUFBLEVBQUEsS0FBQSxDQUFBLEVBQUEsS0FBQSxDQUFBLDRCQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVuQixtQkFBTSxpQkFBSyxNQUFMLEVBQWE7QUFBRSxjQUFBLEtBQUssRUFBRTtBQUFULGFBQWIsQ0FBTjs7QUFGbUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBQSxFQUFYO0FBQUEsQ0FBRCxDQUFUO0FBS0EsVUFBVSxDQUFDO0FBQUEsU0FBVyxTQUFBLENBQUEsS0FBQSxDQUFBLEVBQUEsS0FBQSxDQUFBLEVBQUEsS0FBQSxDQUFBLDRCQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNwQixtQkFBTSxPQUFPLENBQUMsVUFBUixFQUFOOztBQURvQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFBLEVBQVg7QUFBQSxDQUFELENBQVY7QUFJQSxRQUFRLENBQUM7QUFBQSxTQUFXLFNBQUEsQ0FBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsNEJBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2xCLG1CQUFNLE9BQU8sQ0FBQyxRQUFSLEVBQU47O0FBRGtCO0FBQUE7QUFFbEIsbUJBQU0scUJBQU47O0FBRmtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUEsRUFBWDtBQUFBLENBQUQsQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNsZWFudXAsIGluaXQgfSBmcm9tICdkZXRveCc7XG5pbXBvcnQgKiBhcyBhZGFwdGVyIGZyb20gJ2RldG94L3J1bm5lcnMvamVzdC9hZGFwdGVyJztcblxuY29uc3QgY29uZmlnID0gcmVxdWlyZSgnLi4vcGFja2FnZS5qc29uJykuZGV0b3g7XG5cbmplc3Quc2V0VGltZW91dCgxMjAwMDApO1xuamFzbWluZS5nZXRFbnYoKS5hZGRSZXBvcnRlcihhZGFwdGVyKTtcblxuYmVmb3JlQWxsKGFzeW5jICgpID0+IHtcbiAgLy8gRG9uJ3QgcmVpbnN0YWxsIHRoZSBhcHAgZWFjaCB0aW1lXG4gIGF3YWl0IGluaXQoY29uZmlnLCB7IHJldXNlOiB0cnVlIH0pO1xufSk7XG5cbmJlZm9yZUVhY2goYXN5bmMgKCkgPT4ge1xuICBhd2FpdCBhZGFwdGVyLmJlZm9yZUVhY2goKTtcbn0pO1xuXG5hZnRlckFsbChhc3luYyAoKSA9PiB7XG4gIGF3YWl0IGFkYXB0ZXIuYWZ0ZXJBbGwoKTtcbiAgYXdhaXQgY2xlYW51cCgpO1xufSk7Il19