{"version":3,"file":"/Users/samuelbarker/code/personal/react-native-playground/playground/e2e/searching.spec.ts","sources":["/Users/samuelbarker/code/personal/react-native-playground/playground/e2e/searching.spec.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,iCAA6D;AAC7D,2DAA+C;AAE/C,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,SAAS,CAAC,GAAS,EAAE;QACnB,MAAM,8BAAS,EAAE,CAAC;IACpB,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAS,EAAE;QACvD,MAAM,cAAM,CAAC,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACrD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAS,EAAE;QACxC,MAAM,cAAM,CAAC,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IAC3D,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,GAAS,EAAE;QACzD,MAAM,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACnD,MAAM,cAAM,CAAC,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC3D,MAAM,cAAM,CAAC,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC1D,MAAM,cAAM,CAAC,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QACzD,MAAM,cAAM,CAAC,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;IAClE,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAS,EAAE;QACjE,MAAM,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAC/C,MAAM,cAAM,CAAC,eAAO,CAAC,UAAE,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IAC7D,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { by, device, expect, element, waitFor } from 'detox';\nimport { reloadApp } from 'detox-expo-helpers';\n\ndescribe('Searching Pokemon', () => {\n  beforeAll(async () => {\n    await reloadApp();\n  });\n\n  it('should display the home screen on start', async () => {\n    await expect(element(by.id('home'))).toBeVisible();\n  });\n\n  it('should have a search bar', async () => {\n    await expect(element(by.id('search-bar'))).toBeVisible();\n  });\n\n  it('should update the list based on my search', async () => {\n    await element(by.id('search-bar')).typeText('chu');\n    await expect(element(by.id('list-pikachu'))).toBeVisible();\n    await expect(element(by.id('list-raichu'))).toBeVisible();\n    await expect(element(by.id('list-pichu'))).toBeVisible();\n    await expect(element(by.id('list-cinderace'))).toBeNotVisible();\n  });\n\n  it('should update the list if I delete all characters', async () => {\n    await element(by.id('search-bar')).clearText();\n    await expect(element(by.id('list-grookey'))).toBeVisible();\n  });\n});\n"]}