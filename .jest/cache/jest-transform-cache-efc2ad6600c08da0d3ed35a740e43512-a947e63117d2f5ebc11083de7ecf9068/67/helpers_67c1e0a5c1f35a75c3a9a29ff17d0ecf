bcadeb5949b0bbaf2fb1bd53d0c80871
"use strict";

/* istanbul ignore next */
function cov_2nztfesj2x() {
  var path = "/Users/samuelbarker/code/personal/react-native-playground/playground/src/helpers.ts";
  var hash = "db3ddfa229f6d45d910a58ee05d182cd515213f0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/samuelbarker/code/personal/react-native-playground/playground/src/helpers.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 50
        }
      },
      "2": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 46
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 2
        }
      },
      "4": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "6": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 61
        }
      },
      "7": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 2
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "9": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 85
        }
      },
      "10": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 31
          },
          end: {
            line: 5,
            column: 32
          }
        },
        loc: {
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 17
          }
        },
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 8,
            column: 61
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 20
          }
        },
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }],
        line: 10
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "db3ddfa229f6d45d910a58ee05d182cd515213f0"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2nztfesj2x = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2nztfesj2x();
cov_2nztfesj2x().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const expo_constants_1 =
/* istanbul ignore next */
(cov_2nztfesj2x().s[1]++, require("expo-constants"));
const pokemonTypes =
/* istanbul ignore next */
(cov_2nztfesj2x().s[2]++, require("./pokemonTypes"));

/* istanbul ignore next */
cov_2nztfesj2x().s[3]++;

exports.getPokemonTypeByName = name => {
  /* istanbul ignore next */
  cov_2nztfesj2x().f[0]++;
  cov_2nztfesj2x().s[4]++;
  return pokemonTypes[name.toUpperCase()];
};

/* istanbul ignore next */
cov_2nztfesj2x().s[5]++;

exports.isIos = () => {
  /* istanbul ignore next */
  cov_2nztfesj2x().f[1]++;
  cov_2nztfesj2x().s[6]++;
  return !!expo_constants_1.default.platform.ios;
};

/* istanbul ignore next */
cov_2nztfesj2x().s[7]++;

exports.isTablet = () => {
  /* istanbul ignore next */
  cov_2nztfesj2x().f[2]++;
  cov_2nztfesj2x().s[8]++;

  if (exports.isIos()) {
    /* istanbul ignore next */
    cov_2nztfesj2x().b[0][0]++;
    cov_2nztfesj2x().s[9]++;
    return expo_constants_1.default.platform.ios.userInterfaceIdiom === 'tablet';
  } else
  /* istanbul ignore next */
  {
    cov_2nztfesj2x().b[0][1]++;
  }

  cov_2nztfesj2x().s[10]++;
  return false;
};